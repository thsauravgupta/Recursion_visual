{"ast":null,"code":"import React,{useState}from'react';import{X}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function HelpModal(){const[isOpen,setIsOpen]=useState(false);const openModal=()=>setIsOpen(true);const closeModal=()=>setIsOpen(false);// Add global event listener for help button (if needed)\nReact.useEffect(()=>{const handleHelpButton=e=>{var _e$target$closest,_e$target$closest$tex;if(e.target.textContent==='Help'||(_e$target$closest=e.target.closest('button'))!==null&&_e$target$closest!==void 0&&(_e$target$closest$tex=_e$target$closest.textContent)!==null&&_e$target$closest$tex!==void 0&&_e$target$closest$tex.includes('Help')){openModal();}};document.addEventListener('click',handleHelpButton);return()=>document.removeEventListener('click',handleHelpButton);},[]);if(!isOpen)return null;return/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",onClick:closeModal,children:[/*#__PURE__*/_jsx(\"div\",{className:\"modal-backdrop\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",onClick:e=>e.stopPropagation(),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"modal-header\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"How to Use the Recursion Tree Visualizer\"}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn--outline\",onClick:closeModal,children:/*#__PURE__*/_jsx(X,{size:18})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-body\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Getting Started\"}),/*#__PURE__*/_jsxs(\"ol\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Choose a template algorithm from the dropdown or write your own recursive function\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Enter the function parameters (e.g., \\\"5\\\" for fibonacci(5))\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Click \\\"Run\\\" to analyze and visualize the recursion\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Use the animation controls to step through execution\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Animation Controls\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Play/Pause:\"}),\" Start or stop the animation\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Step Back/Forward:\"}),\" Move one step at a time\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Speed Control:\"}),\" Adjust animation speed from 0.5x to 5x\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Tree Visualization\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Pan:\"}),\" Click and drag to move around the tree\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Zoom:\"}),\" Use mouse wheel or zoom buttons\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Node Colors:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Blue: Currently executing function\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Green: Completed function calls\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Red: Base case calls\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Gray: Pending function calls\"})]})]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Information Panels\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Call Stack:\"}),\" Shows the current function call stack\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Complexity:\"}),\" Displays time and space complexity analysis\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Statistics:\"}),\" Shows execution metrics and efficiency\"]})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Writing Custom Functions\"}),/*#__PURE__*/_jsx(\"p\",{children:\"You can write your own recursive functions using JavaScript syntax:\"}),/*#__PURE__*/_jsx(\"pre\",{children:/*#__PURE__*/_jsx(\"code\",{children:\"function myFunction(n) {\\n  if (n <= 1) return 1; // base case\\n  return n + myFunction(n - 1); // recursive case\\n}\"})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Tips for Better Visualization\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"Use small input values (n \\u2264 10) for better visualization\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Functions with many recursive calls may be hard to visualize\"}),/*#__PURE__*/_jsx(\"li\",{children:\"The tree layout automatically adjusts based on the recursion structure\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Use the step controls to understand the execution flow\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:\"Keyboard Shortcuts\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Space:\"}),\" Play/Pause animation\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Arrow Right:\"}),\" Step forward\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Arrow Left:\"}),\" Step backward\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"R:\"}),\" Reset execution\"]}),/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Escape:\"}),\" Close this help modal\"]})]})]})]})]});}export default HelpModal;","map":{"version":3,"names":["React","useState","X","jsx","_jsx","jsxs","_jsxs","HelpModal","isOpen","setIsOpen","openModal","closeModal","useEffect","handleHelpButton","e","_e$target$closest","_e$target$closest$tex","target","textContent","closest","includes","document","addEventListener","removeEventListener","className","onClick","children","stopPropagation","size"],"sources":["D:/Projects/git/main_vercel/Recursion_visual/frontend1/src/components/HelpModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { X } from 'lucide-react';\n\nfunction HelpModal() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => setIsOpen(true);\n  const closeModal = () => setIsOpen(false);\n\n  // Add global event listener for help button (if needed)\n  React.useEffect(() => {\n    const handleHelpButton = (e) => {\n      if (e.target.textContent === 'Help' || e.target.closest('button')?.textContent?.includes('Help')) {\n        openModal();\n      }\n    };\n\n    document.addEventListener('click', handleHelpButton);\n    return () => document.removeEventListener('click', handleHelpButton);\n  }, []);\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal\" onClick={closeModal}>\n      <div className=\"modal-backdrop\"></div>\n      <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n        <div className=\"modal-header\">\n          <h2>How to Use the Recursion Tree Visualizer</h2>\n          <button className=\"btn btn--outline\" onClick={closeModal}>\n            <X size={18} />\n          </button>\n        </div>\n\n        <div className=\"modal-body\">\n          <h3>Getting Started</h3>\n          <ol>\n            <li>Choose a template algorithm from the dropdown or write your own recursive function</li>\n            <li>Enter the function parameters (e.g., \"5\" for fibonacci(5))</li>\n            <li>Click \"Run\" to analyze and visualize the recursion</li>\n            <li>Use the animation controls to step through execution</li>\n          </ol>\n\n          <h3>Animation Controls</h3>\n          <ul>\n            <li><strong>Play/Pause:</strong> Start or stop the animation</li>\n            <li><strong>Step Back/Forward:</strong> Move one step at a time</li>\n            <li><strong>Speed Control:</strong> Adjust animation speed from 0.5x to 5x</li>\n          </ul>\n\n          <h3>Tree Visualization</h3>\n          <ul>\n            <li><strong>Pan:</strong> Click and drag to move around the tree</li>\n            <li><strong>Zoom:</strong> Use mouse wheel or zoom buttons</li>\n            <li><strong>Node Colors:</strong>\n              <ul>\n                <li>Blue: Currently executing function</li>\n                <li>Green: Completed function calls</li>\n                <li>Red: Base case calls</li>\n                <li>Gray: Pending function calls</li>\n              </ul>\n            </li>\n          </ul>\n\n          <h3>Information Panels</h3>\n          <ul>\n            <li><strong>Call Stack:</strong> Shows the current function call stack</li>\n            <li><strong>Complexity:</strong> Displays time and space complexity analysis</li>\n            <li><strong>Statistics:</strong> Shows execution metrics and efficiency</li>\n          </ul>\n\n          <h3>Writing Custom Functions</h3>\n          <p>You can write your own recursive functions using JavaScript syntax:</p>\n          <pre><code>{`function myFunction(n) {\n  if (n <= 1) return 1; // base case\n  return n + myFunction(n - 1); // recursive case\n}`}</code></pre>\n\n          <h3>Tips for Better Visualization</h3>\n          <ul>\n            <li>Use small input values (n â‰¤ 10) for better visualization</li>\n            <li>Functions with many recursive calls may be hard to visualize</li>\n            <li>The tree layout automatically adjusts based on the recursion structure</li>\n            <li>Use the step controls to understand the execution flow</li>\n          </ul>\n\n          <h3>Keyboard Shortcuts</h3>\n          <ul>\n            <li><strong>Space:</strong> Play/Pause animation</li>\n            <li><strong>Arrow Right:</strong> Step forward</li>\n            <li><strong>Arrow Left:</strong> Step backward</li>\n            <li><strong>R:</strong> Reset execution</li>\n            <li><strong>Escape:</strong> Close this help modal</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default HelpModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}