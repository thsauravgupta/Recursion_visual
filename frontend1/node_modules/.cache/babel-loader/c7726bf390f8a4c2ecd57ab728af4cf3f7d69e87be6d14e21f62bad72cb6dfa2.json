{"ast":null,"code":"import{useEffect}from'react';import{useRecursion}from'../context/RecursionContext';export function useKeyboardShortcuts(){const{state,dispatch,ActionTypes}=useRecursion();const{currentStep,totalSteps,isRunning}=state;useEffect(()=>{const handleKeyDown=event=>{// Don't trigger shortcuts when typing in input fields\nif(event.target.tagName==='INPUT'||event.target.tagName==='TEXTAREA'||event.target.isContentEditable){return;}switch(event.key){case' ':case'Spacebar':// For older browsers\nevent.preventDefault();if(totalSteps>0){if(isRunning){dispatch({type:ActionTypes.PAUSE_EXECUTION});}else{dispatch({type:ActionTypes.START_EXECUTION});}}break;case'ArrowRight':event.preventDefault();if(currentStep<totalSteps-1){dispatch({type:ActionTypes.SET_EXECUTION_STEP,payload:currentStep+1});}break;case'ArrowLeft':event.preventDefault();if(currentStep>0){dispatch({type:ActionTypes.SET_EXECUTION_STEP,payload:currentStep-1});}break;case'r':case'R':event.preventDefault();dispatch({type:ActionTypes.RESET_EXECUTION});break;case'Escape':// Close any open modals (handled in HelpModal component)\nbreak;case'?':event.preventDefault();// This could trigger help modal\nbreak;default:break;}};document.addEventListener('keydown',handleKeyDown);return()=>{document.removeEventListener('keydown',handleKeyDown);};},[state,dispatch,ActionTypes,currentStep,totalSteps,isRunning]);}","map":{"version":3,"names":["useEffect","useRecursion","useKeyboardShortcuts","state","dispatch","ActionTypes","currentStep","totalSteps","isRunning","handleKeyDown","event","target","tagName","isContentEditable","key","preventDefault","type","PAUSE_EXECUTION","START_EXECUTION","SET_EXECUTION_STEP","payload","RESET_EXECUTION","document","addEventListener","removeEventListener"],"sources":["D:/Projects/git/main_vercel/Recursion_visual/frontend1/src/hooks/useKeyboardShortcuts.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useRecursion } from '../context/RecursionContext';\n\nexport function useKeyboardShortcuts() {\n  const { state, dispatch, ActionTypes } = useRecursion();\n  const { currentStep, totalSteps, isRunning } = state;\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      // Don't trigger shortcuts when typing in input fields\n      if (event.target.tagName === 'INPUT' || \n          event.target.tagName === 'TEXTAREA' || \n          event.target.isContentEditable) {\n        return;\n      }\n\n      switch (event.key) {\n        case ' ':\n        case 'Spacebar': // For older browsers\n          event.preventDefault();\n          if (totalSteps > 0) {\n            if (isRunning) {\n              dispatch({ type: ActionTypes.PAUSE_EXECUTION });\n            } else {\n              dispatch({ type: ActionTypes.START_EXECUTION });\n            }\n          }\n          break;\n\n        case 'ArrowRight':\n          event.preventDefault();\n          if (currentStep < totalSteps - 1) {\n            dispatch({ type: ActionTypes.SET_EXECUTION_STEP, payload: currentStep + 1 });\n          }\n          break;\n\n        case 'ArrowLeft':\n          event.preventDefault();\n          if (currentStep > 0) {\n            dispatch({ type: ActionTypes.SET_EXECUTION_STEP, payload: currentStep - 1 });\n          }\n          break;\n\n        case 'r':\n        case 'R':\n          event.preventDefault();\n          dispatch({ type: ActionTypes.RESET_EXECUTION });\n          break;\n\n        case 'Escape':\n          // Close any open modals (handled in HelpModal component)\n          break;\n\n        case '?':\n          event.preventDefault();\n          // This could trigger help modal\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [state, dispatch, ActionTypes, currentStep, totalSteps, isRunning]);\n}\n"],"mappings":"AAAA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,YAAY,KAAQ,6BAA6B,CAE1D,MAAO,SAAS,CAAAC,oBAAoBA,CAAA,CAAG,CACrC,KAAM,CAAEC,KAAK,CAAEC,QAAQ,CAAEC,WAAY,CAAC,CAAGJ,YAAY,CAAC,CAAC,CACvD,KAAM,CAAEK,WAAW,CAAEC,UAAU,CAAEC,SAAU,CAAC,CAAGL,KAAK,CAEpDH,SAAS,CAAC,IAAM,CACd,KAAM,CAAAS,aAAa,CAAIC,KAAK,EAAK,CAC/B;AACA,GAAIA,KAAK,CAACC,MAAM,CAACC,OAAO,GAAK,OAAO,EAChCF,KAAK,CAACC,MAAM,CAACC,OAAO,GAAK,UAAU,EACnCF,KAAK,CAACC,MAAM,CAACE,iBAAiB,CAAE,CAClC,OACF,CAEA,OAAQH,KAAK,CAACI,GAAG,EACf,IAAK,GAAG,CACR,IAAK,UAAU,CAAE;AACfJ,KAAK,CAACK,cAAc,CAAC,CAAC,CACtB,GAAIR,UAAU,CAAG,CAAC,CAAE,CAClB,GAAIC,SAAS,CAAE,CACbJ,QAAQ,CAAC,CAAEY,IAAI,CAAEX,WAAW,CAACY,eAAgB,CAAC,CAAC,CACjD,CAAC,IAAM,CACLb,QAAQ,CAAC,CAAEY,IAAI,CAAEX,WAAW,CAACa,eAAgB,CAAC,CAAC,CACjD,CACF,CACA,MAEF,IAAK,YAAY,CACfR,KAAK,CAACK,cAAc,CAAC,CAAC,CACtB,GAAIT,WAAW,CAAGC,UAAU,CAAG,CAAC,CAAE,CAChCH,QAAQ,CAAC,CAAEY,IAAI,CAAEX,WAAW,CAACc,kBAAkB,CAAEC,OAAO,CAAEd,WAAW,CAAG,CAAE,CAAC,CAAC,CAC9E,CACA,MAEF,IAAK,WAAW,CACdI,KAAK,CAACK,cAAc,CAAC,CAAC,CACtB,GAAIT,WAAW,CAAG,CAAC,CAAE,CACnBF,QAAQ,CAAC,CAAEY,IAAI,CAAEX,WAAW,CAACc,kBAAkB,CAAEC,OAAO,CAAEd,WAAW,CAAG,CAAE,CAAC,CAAC,CAC9E,CACA,MAEF,IAAK,GAAG,CACR,IAAK,GAAG,CACNI,KAAK,CAACK,cAAc,CAAC,CAAC,CACtBX,QAAQ,CAAC,CAAEY,IAAI,CAAEX,WAAW,CAACgB,eAAgB,CAAC,CAAC,CAC/C,MAEF,IAAK,QAAQ,CACX;AACA,MAEF,IAAK,GAAG,CACNX,KAAK,CAACK,cAAc,CAAC,CAAC,CACtB;AACA,MAEF,QACE,MACJ,CACF,CAAC,CAEDO,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAEd,aAAa,CAAC,CAEnD,MAAO,IAAM,CACXa,QAAQ,CAACE,mBAAmB,CAAC,SAAS,CAAEf,aAAa,CAAC,CACxD,CAAC,CACH,CAAC,CAAE,CAACN,KAAK,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,WAAW,CAAEC,UAAU,CAAEC,SAAS,CAAC,CAAC,CACxE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}