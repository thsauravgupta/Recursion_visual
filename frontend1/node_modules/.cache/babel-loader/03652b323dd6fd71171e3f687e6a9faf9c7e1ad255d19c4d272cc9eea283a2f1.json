{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export function ThemeProvider(_ref){let{children}=_ref;const[isDarkMode,setIsDarkMode]=useState(()=>{// Check for saved theme preference or use system preference\nconst savedTheme=localStorage.getItem('theme');if(savedTheme){return savedTheme==='dark';}return window.matchMedia('(prefers-color-scheme: dark)').matches;});useEffect(()=>{// Apply theme to document element\ndocument.documentElement.setAttribute('data-color-scheme',isDarkMode?'dark':'light');// Save preference to localStorage\nlocalStorage.setItem('theme',isDarkMode?'dark':'light');},[isDarkMode]);const toggleTheme=()=>{setIsDarkMode(prev=>!prev);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{isDarkMode,toggleTheme},children:children});}export function useTheme(){const context=useContext(ThemeContext);if(context===undefined){throw new Error('useTheme must be used within a ThemeProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","window","matchMedia","matches","document","documentElement","setAttribute","setItem","toggleTheme","prev","Provider","value","useTheme","context","undefined","Error"],"sources":["D:/Projects/git/main_vercel/Recursion_visual/frontend1/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst ThemeContext = createContext();\n\nexport function ThemeProvider({ children }) {\n  const [isDarkMode, setIsDarkMode] = useState(() => {\n    // Check for saved theme preference or use system preference\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme) {\n      return savedTheme === 'dark';\n    }\n    return window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n\n  useEffect(() => {\n    // Apply theme to document element\n    document.documentElement.setAttribute(\n      'data-color-scheme', \n      isDarkMode ? 'dark' : 'light'\n    );\n    // Save preference to localStorage\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n\n  return (\n    <ThemeContext.Provider value={{ isDarkMode, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext);\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,YAAY,cAAGN,aAAa,CAAC,CAAC,CAEpC,MAAO,SAAS,CAAAO,aAAaA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,IAAM,CACjD;AACA,KAAM,CAAAU,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAChD,GAAIF,UAAU,CAAE,CACd,MAAO,CAAAA,UAAU,GAAK,MAAM,CAC9B,CACA,MAAO,CAAAG,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO,CAClE,CAAC,CAAC,CAEFd,SAAS,CAAC,IAAM,CACd;AACAe,QAAQ,CAACC,eAAe,CAACC,YAAY,CACnC,mBAAmB,CACnBV,UAAU,CAAG,MAAM,CAAG,OACxB,CAAC,CACD;AACAG,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAEX,UAAU,CAAG,MAAM,CAAG,OAAO,CAAC,CAC9D,CAAC,CAAE,CAACA,UAAU,CAAC,CAAC,CAEhB,KAAM,CAAAY,WAAW,CAAGA,CAAA,GAAM,CACxBX,aAAa,CAACY,IAAI,EAAI,CAACA,IAAI,CAAC,CAC9B,CAAC,CAED,mBACElB,IAAA,CAACC,YAAY,CAACkB,QAAQ,EAACC,KAAK,CAAE,CAAEf,UAAU,CAAEY,WAAY,CAAE,CAAAb,QAAA,CACvDA,QAAQ,CACY,CAAC,CAE5B,CAEA,MAAO,SAAS,CAAAiB,QAAQA,CAAA,CAAG,CACzB,KAAM,CAAAC,OAAO,CAAG1B,UAAU,CAACK,YAAY,CAAC,CACxC,GAAIqB,OAAO,GAAKC,SAAS,CAAE,CACzB,KAAM,IAAI,CAAAC,KAAK,CAAC,8CAA8C,CAAC,CACjE,CACA,MAAO,CAAAF,OAAO,CAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}