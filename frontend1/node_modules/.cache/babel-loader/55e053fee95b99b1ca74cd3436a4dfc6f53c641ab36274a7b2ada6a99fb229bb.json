{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\git\\\\main_vercel\\\\Recursion_visual\\\\frontend1\\\\src\\\\components\\\\VisualizationPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport { useRecursion } from '../context/RecursionContext';\nimport { ZoomIn, ZoomOut, Maximize2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VisualizationPanel() {\n  _s();\n  var _executionSteps$curre;\n  const {\n    state,\n    dispatch,\n    ActionTypes,\n    nodeColors\n  } = useRecursion();\n  const {\n    treeData,\n    currentStep,\n    executionSteps,\n    svgTransform\n  } = state;\n  const svgRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Mouse event handlers for pan and zoom\n  const handleMouseDown = e => {\n    if (e.target === svgRef.current || e.target.closest('.tree-group')) {\n      setIsDragging(true);\n      setDragStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  const handleMouseMove = e => {\n    if (isDragging) {\n      const deltaX = e.clientX - dragStart.x;\n      const deltaY = e.clientY - dragStart.y;\n      dispatch({\n        type: ActionTypes.UPDATE_SVG_TRANSFORM,\n        payload: {\n          x: svgTransform.x + deltaX,\n          y: svgTransform.y + deltaY\n        }\n      });\n      setDragStart({\n        x: e.clientX,\n        y: e.clientY\n      });\n    }\n  };\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n  const handleWheel = e => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    const newScale = Math.max(0.1, Math.min(3, svgTransform.scale * delta));\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: {\n        scale: newScale\n      }\n    });\n  };\n  const handleZoomIn = () => {\n    const newScale = Math.min(3, svgTransform.scale * 1.2);\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: {\n        scale: newScale\n      }\n    });\n  };\n  const handleZoomOut = () => {\n    const newScale = Math.max(0.1, svgTransform.scale * 0.8);\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: {\n        scale: newScale\n      }\n    });\n  };\n  const handleCenter = () => {\n    dispatch({\n      type: ActionTypes.RESET_SVG_TRANSFORM\n    });\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, dragStart]);\n  const renderNode = (node, isActive = false) => {\n    const nodeState = isActive ? 'active' : node.state;\n    const fillColor = nodeColors[nodeState] || nodeColors.pending;\n    return /*#__PURE__*/_jsxDEV(\"g\", {\n      transform: `translate(${node.x}, ${node.y})`,\n      className: \"tree-node\",\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        r: \"25\",\n        fill: fillColor,\n        stroke: \"#fff\",\n        strokeWidth: \"2\",\n        className: \"tree-node-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        y: \"-5\",\n        textAnchor: \"middle\",\n        fill: \"white\",\n        fontSize: \"10\",\n        className: \"tree-node-text\",\n        children: `${node.name}(${node.args.join(',')})`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n        y: \"8\",\n        textAnchor: \"middle\",\n        fill: \"white\",\n        fontSize: \"10\",\n        className: \"tree-node-result\",\n        children: node.result !== undefined ? `= ${node.result}` : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, node.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this);\n  };\n  const renderEdge = (parent, child) => {\n    return /*#__PURE__*/_jsxDEV(\"line\", {\n      x1: parent.x,\n      y1: parent.y + 25,\n      x2: child.x,\n      y2: child.y - 25,\n      stroke: \"#666\",\n      strokeWidth: \"2\",\n      className: \"tree-edge\"\n    }, `${parent.id}-${child.id}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this);\n  };\n  const renderTree = (node, activeNodeId = null) => {\n    const elements = [];\n\n    // Render edges first\n    if (node.children) {\n      node.children.forEach(child => {\n        elements.push(renderEdge(node, child));\n        elements.push(...renderTree(child, activeNodeId));\n      });\n    }\n\n    // Render node\n    elements.push(renderNode(node, node.id === activeNodeId));\n    return elements;\n  };\n  const activeNodeId = (_executionSteps$curre = executionSteps[currentStep]) === null || _executionSteps$curre === void 0 ? void 0 : _executionSteps$curre.activeNode;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel visualization-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Tree Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visualization-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--sm btn--outline\",\n          onClick: handleZoomIn,\n          title: \"Zoom In\",\n          children: /*#__PURE__*/_jsxDEV(ZoomIn, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--sm btn--outline\",\n          onClick: handleZoomOut,\n          title: \"Zoom Out\",\n          children: /*#__PURE__*/_jsxDEV(ZoomOut, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn--sm btn--outline\",\n          onClick: handleCenter,\n          title: \"Center & Reset Zoom\",\n          children: /*#__PURE__*/_jsxDEV(Maximize2, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tree-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          className: \"tree-svg\",\n          viewBox: \"0 0 800 600\",\n          onMouseDown: handleMouseDown,\n          onWheel: handleWheel,\n          style: {\n            cursor: isDragging ? 'grabbing' : 'grab'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n            children: /*#__PURE__*/_jsxDEV(\"marker\", {\n              id: \"arrowhead\",\n              markerWidth: \"10\",\n              markerHeight: \"7\",\n              refX: \"9\",\n              refY: \"3.5\",\n              orient: \"auto\",\n              children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n                points: \"0 0, 10 3.5, 0 7\",\n                fill: \"#666\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n            className: \"tree-group\",\n            transform: `translate(${svgTransform.x}, ${svgTransform.y}) scale(${svgTransform.scale})`,\n            children: treeData && renderTree(treeData, activeNodeId)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tree-legend\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: nodeColors.active\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: nodeColors.completed\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Completed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: nodeColors.baseCase\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Base Case\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"legend-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"legend-color\",\n              style: {\n                backgroundColor: nodeColors.pending\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Pending\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), !treeData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Run an algorithm to see the recursion tree visualization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n_s(VisualizationPanel, \"ZO4PN8R/XjJIb/3ua4zg24PnBcI=\", false, function () {\n  return [useRecursion];\n});\n_c = VisualizationPanel;\nexport default VisualizationPanel;\nvar _c;\n$RefreshReg$(_c, \"VisualizationPanel\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useRecursion","ZoomIn","ZoomOut","Maximize2","jsxDEV","_jsxDEV","VisualizationPanel","_s","_executionSteps$curre","state","dispatch","ActionTypes","nodeColors","treeData","currentStep","executionSteps","svgTransform","svgRef","isDragging","setIsDragging","dragStart","setDragStart","x","y","handleMouseDown","e","target","current","closest","clientX","clientY","handleMouseMove","deltaX","deltaY","type","UPDATE_SVG_TRANSFORM","payload","handleMouseUp","handleWheel","preventDefault","delta","newScale","Math","max","min","scale","handleZoomIn","handleZoomOut","handleCenter","RESET_SVG_TRANSFORM","document","addEventListener","removeEventListener","renderNode","node","isActive","nodeState","fillColor","pending","transform","className","children","r","fill","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","textAnchor","fontSize","name","args","join","result","undefined","id","renderEdge","parent","child","x1","y1","x2","y2","renderTree","activeNodeId","elements","forEach","push","activeNode","onClick","title","size","ref","viewBox","onMouseDown","onWheel","style","cursor","markerWidth","markerHeight","refX","refY","orient","points","backgroundColor","active","completed","baseCase","_c","$RefreshReg$"],"sources":["D:/Projects/git/main_vercel/Recursion_visual/frontend1/src/components/VisualizationPanel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useRecursion } from '../context/RecursionContext';\nimport { ZoomIn, ZoomOut, Maximize2 } from 'lucide-react';\n\nfunction VisualizationPanel() {\n  const { state, dispatch, ActionTypes, nodeColors } = useRecursion();\n  const { treeData, currentStep, executionSteps, svgTransform } = state;\n  const svgRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n\n  // Mouse event handlers for pan and zoom\n  const handleMouseDown = (e) => {\n    if (e.target === svgRef.current || e.target.closest('.tree-group')) {\n      setIsDragging(true);\n      setDragStart({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDragging) {\n      const deltaX = e.clientX - dragStart.x;\n      const deltaY = e.clientY - dragStart.y;\n\n      dispatch({\n        type: ActionTypes.UPDATE_SVG_TRANSFORM,\n        payload: {\n          x: svgTransform.x + deltaX,\n          y: svgTransform.y + deltaY\n        }\n      });\n\n      setDragStart({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  const handleWheel = (e) => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    const newScale = Math.max(0.1, Math.min(3, svgTransform.scale * delta));\n\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: { scale: newScale }\n    });\n  };\n\n  const handleZoomIn = () => {\n    const newScale = Math.min(3, svgTransform.scale * 1.2);\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: { scale: newScale }\n    });\n  };\n\n  const handleZoomOut = () => {\n    const newScale = Math.max(0.1, svgTransform.scale * 0.8);\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: { scale: newScale }\n    });\n  };\n\n  const handleCenter = () => {\n    dispatch({ type: ActionTypes.RESET_SVG_TRANSFORM });\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, dragStart]);\n\n  const renderNode = (node, isActive = false) => {\n    const nodeState = isActive ? 'active' : node.state;\n    const fillColor = nodeColors[nodeState] || nodeColors.pending;\n\n    return (\n      <g key={node.id} transform={`translate(${node.x}, ${node.y})`} className=\"tree-node\">\n        <circle\n          r=\"25\"\n          fill={fillColor}\n          stroke=\"#fff\"\n          strokeWidth=\"2\"\n          className=\"tree-node-circle\"\n        />\n\n        <text\n          y=\"-5\"\n          textAnchor=\"middle\"\n          fill=\"white\"\n          fontSize=\"10\"\n          className=\"tree-node-text\"\n        >\n          {`${node.name}(${node.args.join(',')})`}\n        </text>\n\n        <text\n          y=\"8\"\n          textAnchor=\"middle\"\n          fill=\"white\"\n          fontSize=\"10\"\n          className=\"tree-node-result\"\n        >\n          {node.result !== undefined ? `= ${node.result}` : ''}\n        </text>\n      </g>\n    );\n  };\n\n  const renderEdge = (parent, child) => {\n    return (\n      <line\n        key={`${parent.id}-${child.id}`}\n        x1={parent.x}\n        y1={parent.y + 25}\n        x2={child.x}\n        y2={child.y - 25}\n        stroke=\"#666\"\n        strokeWidth=\"2\"\n        className=\"tree-edge\"\n      />\n    );\n  };\n\n  const renderTree = (node, activeNodeId = null) => {\n    const elements = [];\n\n    // Render edges first\n    if (node.children) {\n      node.children.forEach(child => {\n        elements.push(renderEdge(node, child));\n        elements.push(...renderTree(child, activeNodeId));\n      });\n    }\n\n    // Render node\n    elements.push(renderNode(node, node.id === activeNodeId));\n\n    return elements;\n  };\n\n  const activeNodeId = executionSteps[currentStep]?.activeNode;\n\n  return (\n    <div className=\"panel visualization-panel\">\n      <div className=\"panel-header\">\n        <h3>Tree Visualization</h3>\n        <div className=\"visualization-controls\">\n          <button\n            className=\"btn btn--sm btn--outline\"\n            onClick={handleZoomIn}\n            title=\"Zoom In\"\n          >\n            <ZoomIn size={16} />\n          </button>\n          <button\n            className=\"btn btn--sm btn--outline\"\n            onClick={handleZoomOut}\n            title=\"Zoom Out\"\n          >\n            <ZoomOut size={16} />\n          </button>\n          <button\n            className=\"btn btn--sm btn--outline\"\n            onClick={handleCenter}\n            title=\"Center & Reset Zoom\"\n          >\n            <Maximize2 size={16} />\n          </button>\n        </div>\n      </div>\n\n      <div className=\"panel-body\">\n        <div className=\"tree-container\">\n          <svg\n            ref={svgRef}\n            className=\"tree-svg\"\n            viewBox=\"0 0 800 600\"\n            onMouseDown={handleMouseDown}\n            onWheel={handleWheel}\n            style={{ cursor: isDragging ? 'grabbing' : 'grab' }}\n          >\n            <defs>\n              <marker\n                id=\"arrowhead\"\n                markerWidth=\"10\"\n                markerHeight=\"7\"\n                refX=\"9\"\n                refY=\"3.5\"\n                orient=\"auto\"\n              >\n                <polygon\n                  points=\"0 0, 10 3.5, 0 7\"\n                  fill=\"#666\"\n                />\n              </marker>\n            </defs>\n\n            <g\n              className=\"tree-group\"\n              transform={`translate(${svgTransform.x}, ${svgTransform.y}) scale(${svgTransform.scale})`}\n            >\n              {treeData && renderTree(treeData, activeNodeId)}\n            </g>\n          </svg>\n\n          {/* Legend */}\n          <div className=\"tree-legend\">\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.active }}></div>\n              <span>Active</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.completed }}></div>\n              <span>Completed</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.baseCase }}></div>\n              <span>Base Case</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.pending }}></div>\n              <span>Pending</span>\n            </div>\n          </div>\n\n          {!treeData && (\n            <div className=\"empty-state\">\n              <p>Run an algorithm to see the recursion tree visualization</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VisualizationPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}