{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\git\\\\main_vercel\\\\Recursion_visual\\\\frontend1\\\\src\\\\components\\\\InfoPanel.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useRecursion } from '../context/RecursionContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InfoPanel() {\n  _s();\n  const {\n    state\n  } = useRecursion();\n  const {\n    callStack,\n    statistics,\n    selectedAlgorithm,\n    currentStep,\n    executionSteps\n  } = state;\n  const [activeTab, setActiveTab] = useState('stack');\n\n  // Get complexity info based on algorithm\n  const getComplexityInfo = algorithmName => {\n    const complexityMap = {\n      fibonacci: {\n        time: 'O(2^n)',\n        space: 'O(n)'\n      },\n      factorial: {\n        time: 'O(n)',\n        space: 'O(n)'\n      },\n      'binary search': {\n        time: 'O(log n)',\n        space: 'O(log n)'\n      },\n      'power function': {\n        time: 'O(log n)',\n        space: 'O(log n)'\n      },\n      'gcd (euclidean)': {\n        time: 'O(log n)',\n        space: 'O(log n)'\n      },\n      'sum array': {\n        time: 'O(n)',\n        space: 'O(n)'\n      }\n    };\n    const key = algorithmName.toLowerCase();\n    return complexityMap[key] || {\n      time: 'Unknown',\n      space: 'Unknown'\n    };\n  };\n  const complexity = getComplexityInfo(selectedAlgorithm);\n  const currentStepInfo = executionSteps[currentStep];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"panel info-panel\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Execution Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"panel-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info-tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-btn ${activeTab === 'stack' ? 'active' : ''}`,\n          onClick: () => setActiveTab('stack'),\n          children: \"Call Stack\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-btn ${activeTab === 'complexity' ? 'active' : ''}`,\n          onClick: () => setActiveTab('complexity'),\n          children: \"Complexity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-btn ${activeTab === 'stats' ? 'active' : ''}`,\n          onClick: () => setActiveTab('stats'),\n          children: \"Statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-content\",\n        children: [activeTab === 'stack' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-pane active\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"call-stack\",\n            children: [currentStepInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"step-description\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Current Step:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 24\n                }, this), \" \", currentStepInfo.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), callStack.length > 0 ? callStack.map((call, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `call-stack-item ${index === 0 ? 'active' : ''}`,\n              children: call\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"empty-state\",\n              children: \"No active function calls\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), activeTab === 'complexity' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-pane active\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"complexity-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-label\",\n                children: \"Time Complexity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-value\",\n                children: complexity.time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-label\",\n                children: \"Space Complexity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-value\",\n                children: complexity.space\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity-description\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Analysis:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: getComplexityDescription(selectedAlgorithm, complexity)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), activeTab === 'stats' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tab-pane active\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"statistics-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Total Calls:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: statistics.totalCalls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Base Case Calls:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: statistics.baseCaseCalls\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Execution Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [statistics.executionTime, \"ms\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-label\",\n                children: \"Efficiency:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: statistics.totalCalls > 0 ? `${(statistics.baseCaseCalls / statistics.totalCalls * 100).toFixed(1)}%` : 'N/A'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(InfoPanel, \"J83pSQlwp4lhCUwcsEPaaSxUTc4=\", false, function () {\n  return [useRecursion];\n});\n_c = InfoPanel;\nfunction getComplexityDescription(algorithmName, complexity) {\n  const descriptions = {\n    fibonacci: \"The naive recursive Fibonacci has exponential time complexity because it recalculates the same subproblems multiple times. Each call branches into two more calls, creating a binary tree of exponential size.\",\n    factorial: \"Factorial has linear time and space complexity because it makes exactly n recursive calls, one for each number from n down to 1.\",\n    'binary search': \"Binary Search has logarithmic complexity because it eliminates half of the search space with each recursive call.\",\n    'power function': \"The optimized power function uses divide-and-conquer to achieve logarithmic complexity by squaring intermediate results.\",\n    'gcd (euclidean)': \"The Euclidean algorithm for GCD has logarithmic complexity based on the properties of the modulo operation.\",\n    'sum array': \"Array summation has linear complexity as it visits each element exactly once.\"\n  };\n  return descriptions[algorithmName.toLowerCase()] || `This algorithm has ${complexity.time} time complexity and ${complexity.space} space complexity.`;\n}\nexport default InfoPanel;\nvar _c;\n$RefreshReg$(_c, \"InfoPanel\");","map":{"version":3,"names":["React","useState","useRecursion","jsxDEV","_jsxDEV","InfoPanel","_s","state","callStack","statistics","selectedAlgorithm","currentStep","executionSteps","activeTab","setActiveTab","getComplexityInfo","algorithmName","complexityMap","fibonacci","time","space","factorial","key","toLowerCase","complexity","currentStepInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","description","length","map","call","index","getComplexityDescription","totalCalls","baseCaseCalls","executionTime","toFixed","_c","descriptions","$RefreshReg$"],"sources":["D:/Projects/git/main_vercel/Recursion_visual/frontend1/src/components/InfoPanel.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useRecursion } from '../context/RecursionContext';\n\nfunction InfoPanel() {\n  const { state } = useRecursion();\n  const { callStack, statistics, selectedAlgorithm, currentStep, executionSteps } = state;\n  const [activeTab, setActiveTab] = useState('stack');\n\n  // Get complexity info based on algorithm\n  const getComplexityInfo = (algorithmName) => {\n    const complexityMap = {\n      fibonacci: { time: 'O(2^n)', space: 'O(n)' },\n      factorial: { time: 'O(n)', space: 'O(n)' },\n      'binary search': { time: 'O(log n)', space: 'O(log n)' },\n      'power function': { time: 'O(log n)', space: 'O(log n)' },\n      'gcd (euclidean)': { time: 'O(log n)', space: 'O(log n)' },\n      'sum array': { time: 'O(n)', space: 'O(n)' }\n    };\n\n    const key = algorithmName.toLowerCase();\n    return complexityMap[key] || { time: 'Unknown', space: 'Unknown' };\n  };\n\n  const complexity = getComplexityInfo(selectedAlgorithm);\n  const currentStepInfo = executionSteps[currentStep];\n\n  return (\n    <div className=\"panel info-panel\">\n      <div className=\"panel-header\">\n        <h3>Execution Details</h3>\n      </div>\n\n      <div className=\"panel-body\">\n        <div className=\"info-tabs\">\n          <button\n            className={`tab-btn ${activeTab === 'stack' ? 'active' : ''}`}\n            onClick={() => setActiveTab('stack')}\n          >\n            Call Stack\n          </button>\n          <button\n            className={`tab-btn ${activeTab === 'complexity' ? 'active' : ''}`}\n            onClick={() => setActiveTab('complexity')}\n          >\n            Complexity\n          </button>\n          <button\n            className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}\n            onClick={() => setActiveTab('stats')}\n          >\n            Statistics\n          </button>\n        </div>\n\n        <div className=\"tab-content\">\n          {activeTab === 'stack' && (\n            <div className=\"tab-pane active\">\n              <div className=\"call-stack\">\n                {currentStepInfo && (\n                  <div className=\"step-description\">\n                    <p><strong>Current Step:</strong> {currentStepInfo.description}</p>\n                  </div>\n                )}\n\n                {callStack.length > 0 ? (\n                  callStack.map((call, index) => (\n                    <div \n                      key={index} \n                      className={`call-stack-item ${index === 0 ? 'active' : ''}`}\n                    >\n                      {call}\n                    </div>\n                  ))\n                ) : (\n                  <p className=\"empty-state\">No active function calls</p>\n                )}\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'complexity' && (\n            <div className=\"tab-pane active\">\n              <div className=\"complexity-info\">\n                <div className=\"complexity-item\">\n                  <span className=\"complexity-label\">Time Complexity:</span>\n                  <span className=\"complexity-value\">{complexity.time}</span>\n                </div>\n\n                <div className=\"complexity-item\">\n                  <span className=\"complexity-label\">Space Complexity:</span>\n                  <span className=\"complexity-value\">{complexity.space}</span>\n                </div>\n\n                <div className=\"complexity-description\">\n                  <h4>Analysis:</h4>\n                  <p>{getComplexityDescription(selectedAlgorithm, complexity)}</p>\n                </div>\n              </div>\n            </div>\n          )}\n\n          {activeTab === 'stats' && (\n            <div className=\"tab-pane active\">\n              <div className=\"statistics-info\">\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Total Calls:</span>\n                  <span className=\"stat-value\">{statistics.totalCalls}</span>\n                </div>\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Base Case Calls:</span>\n                  <span className=\"stat-value\">{statistics.baseCaseCalls}</span>\n                </div>\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Execution Time:</span>\n                  <span className=\"stat-value\">{statistics.executionTime}ms</span>\n                </div>\n\n                <div className=\"stat-item\">\n                  <span className=\"stat-label\">Efficiency:</span>\n                  <span className=\"stat-value\">\n                    {statistics.totalCalls > 0 \n                      ? `${((statistics.baseCaseCalls / statistics.totalCalls) * 100).toFixed(1)}%`\n                      : 'N/A'\n                    }\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction getComplexityDescription(algorithmName, complexity) {\n  const descriptions = {\n    fibonacci: \"The naive recursive Fibonacci has exponential time complexity because it recalculates the same subproblems multiple times. Each call branches into two more calls, creating a binary tree of exponential size.\",\n    factorial: \"Factorial has linear time and space complexity because it makes exactly n recursive calls, one for each number from n down to 1.\",\n    'binary search': \"Binary Search has logarithmic complexity because it eliminates half of the search space with each recursive call.\",\n    'power function': \"The optimized power function uses divide-and-conquer to achieve logarithmic complexity by squaring intermediate results.\",\n    'gcd (euclidean)': \"The Euclidean algorithm for GCD has logarithmic complexity based on the properties of the modulo operation.\",\n    'sum array': \"Array summation has linear complexity as it visits each element exactly once.\"\n  };\n\n  return descriptions[algorithmName.toLowerCase()] || \n    `This algorithm has ${complexity.time} time complexity and ${complexity.space} space complexity.`;\n}\n\nexport default InfoPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}