{"ast":null,"code":"import _objectSpread from\"D:/Projects/git/main_vercel/Recursion_visual/frontend1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer}from'react';import{algorithmsData}from'../utils/algorithmsData';// Initial state\nimport{jsx as _jsx}from\"react/jsx-runtime\";const initialState={// Code editor state\ncode:'',params:'',globalVars:'',selectedAlgorithm:'fibonacci',// Execution state\nisRunning:false,isPaused:false,currentStep:0,totalSteps:0,callStack:[],executionSteps:[],// Tree data\ntreeData:null,maxDepth:0,// Stats\nstatistics:{totalCalls:0,baseCaseCalls:0,executionTime:0},// Error state\nerror:null,// Visualization controls\nanimationSpeed:1,// Index in animationSpeeds array\nsvgTransform:{scale:1,x:0,y:0}};// Action types\nconst ActionTypes={SET_CODE:'SET_CODE',SET_PARAMS:'SET_PARAMS',SET_GLOBAL_VARS:'SET_GLOBAL_VARS',SELECT_ALGORITHM:'SELECT_ALGORITHM',START_EXECUTION:'START_EXECUTION',PAUSE_EXECUTION:'PAUSE_EXECUTION',RESET_EXECUTION:'RESET_EXECUTION',SET_EXECUTION_STEP:'SET_EXECUTION_STEP',SET_TREE_DATA:'SET_TREE_DATA',SET_ERROR:'SET_ERROR',SET_ANIMATION_SPEED:'SET_ANIMATION_SPEED',UPDATE_SVG_TRANSFORM:'UPDATE_SVG_TRANSFORM',RESET_SVG_TRANSFORM:'RESET_SVG_TRANSFORM'};// Reducer function\nfunction recursionReducer(state,action){var _state$executionSteps;switch(action.type){case ActionTypes.SET_CODE:return _objectSpread(_objectSpread({},state),{},{code:action.payload});case ActionTypes.SET_PARAMS:return _objectSpread(_objectSpread({},state),{},{params:action.payload});case ActionTypes.SET_GLOBAL_VARS:return _objectSpread(_objectSpread({},state),{},{globalVars:action.payload});case ActionTypes.SELECT_ALGORITHM:{const algorithm=algorithmsData.find(a=>a.name.toLowerCase()===action.payload.toLowerCase());return _objectSpread(_objectSpread({},state),{},{selectedAlgorithm:action.payload,code:algorithm.code,params:algorithm.params,globalVars:algorithm.globalVars||''});}case ActionTypes.START_EXECUTION:return _objectSpread(_objectSpread({},state),{},{isRunning:true,isPaused:false,error:null});case ActionTypes.PAUSE_EXECUTION:return _objectSpread(_objectSpread({},state),{},{isRunning:false,isPaused:true});case ActionTypes.RESET_EXECUTION:return _objectSpread(_objectSpread({},state),{},{isRunning:false,isPaused:false,currentStep:0,totalSteps:0,callStack:[],executionSteps:[],treeData:null,maxDepth:0,statistics:{totalCalls:0,baseCaseCalls:0,executionTime:0},error:null});case ActionTypes.SET_EXECUTION_STEP:return _objectSpread(_objectSpread({},state),{},{currentStep:action.payload,// Update callStack based on the current step\ncallStack:((_state$executionSteps=state.executionSteps[action.payload])===null||_state$executionSteps===void 0?void 0:_state$executionSteps.callStack)||[]});case ActionTypes.SET_TREE_DATA:return _objectSpread(_objectSpread({},state),{},{treeData:action.payload.treeData,executionSteps:action.payload.executionSteps,totalSteps:action.payload.executionSteps.length,maxDepth:action.payload.maxDepth,statistics:action.payload.statistics,isRunning:false,isPaused:true,currentStep:0});case ActionTypes.SET_ERROR:return _objectSpread(_objectSpread({},state),{},{error:action.payload,isRunning:false,isPaused:false});case ActionTypes.SET_ANIMATION_SPEED:return _objectSpread(_objectSpread({},state),{},{animationSpeed:action.payload});case ActionTypes.UPDATE_SVG_TRANSFORM:return _objectSpread(_objectSpread({},state),{},{svgTransform:_objectSpread(_objectSpread({},state.svgTransform),action.payload)});case ActionTypes.RESET_SVG_TRANSFORM:return _objectSpread(_objectSpread({},state),{},{svgTransform:{scale:1,x:0,y:0}});default:return state;}}// Create context\nconst RecursionContext=/*#__PURE__*/createContext();// Provider component\nexport function RecursionProvider(_ref){let{children}=_ref;const[state,dispatch]=useReducer(recursionReducer,initialState);// Animation speeds\nconst animationSpeeds=[{label:'0.5x',value:2000},{label:'1x',value:1000},{label:'2x',value:500},{label:'3x',value:300},{label:'5x',value:100}];// Node colors\nconst nodeColors={active:'#3B82F6',// Blue\ncompleted:'#10B981',// Green\nbaseCase:'#EF4444',// Red\npending:'#6B7280'// Gray\n};return/*#__PURE__*/_jsx(RecursionContext.Provider,{value:{state,dispatch,ActionTypes,animationSpeeds,nodeColors},children:children});}// Custom hook for using the context\nexport function useRecursion(){const context=useContext(RecursionContext);if(context===undefined){throw new Error('useRecursion must be used within a RecursionProvider');}return context;}","map":{"version":3,"names":["React","createContext","useContext","useReducer","algorithmsData","jsx","_jsx","initialState","code","params","globalVars","selectedAlgorithm","isRunning","isPaused","currentStep","totalSteps","callStack","executionSteps","treeData","maxDepth","statistics","totalCalls","baseCaseCalls","executionTime","error","animationSpeed","svgTransform","scale","x","y","ActionTypes","SET_CODE","SET_PARAMS","SET_GLOBAL_VARS","SELECT_ALGORITHM","START_EXECUTION","PAUSE_EXECUTION","RESET_EXECUTION","SET_EXECUTION_STEP","SET_TREE_DATA","SET_ERROR","SET_ANIMATION_SPEED","UPDATE_SVG_TRANSFORM","RESET_SVG_TRANSFORM","recursionReducer","state","action","_state$executionSteps","type","_objectSpread","payload","algorithm","find","a","name","toLowerCase","length","RecursionContext","RecursionProvider","_ref","children","dispatch","animationSpeeds","label","value","nodeColors","active","completed","baseCase","pending","Provider","useRecursion","context","undefined","Error"],"sources":["D:/Projects/git/main_vercel/Recursion_visual/frontend1/src/context/RecursionContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer } from 'react';\nimport { algorithmsData } from '../utils/algorithmsData';\n\n// Initial state\nconst initialState = {\n  // Code editor state\n  code: '',\n  params: '',\n  globalVars: '',\n  selectedAlgorithm: 'fibonacci',\n\n  // Execution state\n  isRunning: false,\n  isPaused: false,\n  currentStep: 0,\n  totalSteps: 0,\n  callStack: [],\n  executionSteps: [],\n\n  // Tree data\n  treeData: null,\n  maxDepth: 0,\n\n  // Stats\n  statistics: {\n    totalCalls: 0,\n    baseCaseCalls: 0,\n    executionTime: 0\n  },\n\n  // Error state\n  error: null,\n\n  // Visualization controls\n  animationSpeed: 1, // Index in animationSpeeds array\n  svgTransform: { scale: 1, x: 0, y: 0 }\n};\n\n// Action types\nconst ActionTypes = {\n  SET_CODE: 'SET_CODE',\n  SET_PARAMS: 'SET_PARAMS',\n  SET_GLOBAL_VARS: 'SET_GLOBAL_VARS',\n  SELECT_ALGORITHM: 'SELECT_ALGORITHM',\n  START_EXECUTION: 'START_EXECUTION',\n  PAUSE_EXECUTION: 'PAUSE_EXECUTION',\n  RESET_EXECUTION: 'RESET_EXECUTION',\n  SET_EXECUTION_STEP: 'SET_EXECUTION_STEP',\n  SET_TREE_DATA: 'SET_TREE_DATA',\n  SET_ERROR: 'SET_ERROR',\n  SET_ANIMATION_SPEED: 'SET_ANIMATION_SPEED',\n  UPDATE_SVG_TRANSFORM: 'UPDATE_SVG_TRANSFORM',\n  RESET_SVG_TRANSFORM: 'RESET_SVG_TRANSFORM'\n};\n\n// Reducer function\nfunction recursionReducer(state, action) {\n  switch (action.type) {\n    case ActionTypes.SET_CODE:\n      return { ...state, code: action.payload };\n\n    case ActionTypes.SET_PARAMS:\n      return { ...state, params: action.payload };\n\n    case ActionTypes.SET_GLOBAL_VARS:\n      return { ...state, globalVars: action.payload };\n\n    case ActionTypes.SELECT_ALGORITHM: {\n      const algorithm = algorithmsData.find(a => a.name.toLowerCase() === action.payload.toLowerCase());\n      return { \n        ...state, \n        selectedAlgorithm: action.payload,\n        code: algorithm.code,\n        params: algorithm.params,\n        globalVars: algorithm.globalVars || ''\n      };\n    }\n\n    case ActionTypes.START_EXECUTION:\n      return { \n        ...state, \n        isRunning: true, \n        isPaused: false,\n        error: null \n      };\n\n    case ActionTypes.PAUSE_EXECUTION:\n      return { ...state, isRunning: false, isPaused: true };\n\n    case ActionTypes.RESET_EXECUTION:\n      return { \n        ...state, \n        isRunning: false, \n        isPaused: false,\n        currentStep: 0,\n        totalSteps: 0,\n        callStack: [],\n        executionSteps: [],\n        treeData: null,\n        maxDepth: 0,\n        statistics: {\n          totalCalls: 0,\n          baseCaseCalls: 0,\n          executionTime: 0\n        },\n        error: null\n      };\n\n    case ActionTypes.SET_EXECUTION_STEP:\n      return { \n        ...state, \n        currentStep: action.payload,\n        // Update callStack based on the current step\n        callStack: state.executionSteps[action.payload]?.callStack || []\n      };\n\n    case ActionTypes.SET_TREE_DATA:\n      return { \n        ...state, \n        treeData: action.payload.treeData,\n        executionSteps: action.payload.executionSteps,\n        totalSteps: action.payload.executionSteps.length,\n        maxDepth: action.payload.maxDepth,\n        statistics: action.payload.statistics,\n        isRunning: false,\n        isPaused: true,\n        currentStep: 0\n      };\n\n    case ActionTypes.SET_ERROR:\n      return { \n        ...state, \n        error: action.payload,\n        isRunning: false,\n        isPaused: false\n      };\n\n    case ActionTypes.SET_ANIMATION_SPEED:\n      return { ...state, animationSpeed: action.payload };\n\n    case ActionTypes.UPDATE_SVG_TRANSFORM:\n      return { \n        ...state, \n        svgTransform: {\n          ...state.svgTransform,\n          ...action.payload\n        }\n      };\n\n    case ActionTypes.RESET_SVG_TRANSFORM:\n      return { \n        ...state, \n        svgTransform: { scale: 1, x: 0, y: 0 }\n      };\n\n    default:\n      return state;\n  }\n}\n\n// Create context\nconst RecursionContext = createContext();\n\n// Provider component\nexport function RecursionProvider({ children }) {\n  const [state, dispatch] = useReducer(recursionReducer, initialState);\n\n  // Animation speeds\n  const animationSpeeds = [\n    { label: '0.5x', value: 2000 },\n    { label: '1x', value: 1000 },\n    { label: '2x', value: 500 },\n    { label: '3x', value: 300 },\n    { label: '5x', value: 100 }\n  ];\n\n  // Node colors\n  const nodeColors = {\n    active: '#3B82F6',  // Blue\n    completed: '#10B981', // Green\n    baseCase: '#EF4444',  // Red\n    pending: '#6B7280'   // Gray\n  };\n\n  return (\n    <RecursionContext.Provider \n      value={{ \n        state, \n        dispatch, \n        ActionTypes,\n        animationSpeeds,\n        nodeColors\n      }}\n    >\n      {children}\n    </RecursionContext.Provider>\n  );\n}\n\n// Custom hook for using the context\nexport function useRecursion() {\n  const context = useContext(RecursionContext);\n  if (context === undefined) {\n    throw new Error('useRecursion must be used within a RecursionProvider');\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}