{"ast":null,"code":"import React,{useRef,useEffect,useState}from'react';import{useRecursion}from'../context/RecursionContext';import{ZoomIn,ZoomOut,Maximize2}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function VisualizationPanel(){var _executionSteps$curre;const{state,dispatch,ActionTypes,nodeColors}=useRecursion();const{treeData,currentStep,executionSteps,svgTransform}=state;const svgRef=useRef(null);const[isDragging,setIsDragging]=useState(false);const[dragStart,setDragStart]=useState({x:0,y:0});// Mouse event handlers for pan and zoom\nconst handleMouseDown=e=>{if(e.target===svgRef.current||e.target.closest('.tree-group')){setIsDragging(true);setDragStart({x:e.clientX,y:e.clientY});}};const handleMouseMove=e=>{if(isDragging){const deltaX=e.clientX-dragStart.x;const deltaY=e.clientY-dragStart.y;dispatch({type:ActionTypes.UPDATE_SVG_TRANSFORM,payload:{x:svgTransform.x+deltaX,y:svgTransform.y+deltaY}});setDragStart({x:e.clientX,y:e.clientY});}};const handleMouseUp=()=>{setIsDragging(false);};const handleWheel=e=>{e.preventDefault();const delta=e.deltaY>0?0.9:1.1;const newScale=Math.max(0.1,Math.min(3,svgTransform.scale*delta));dispatch({type:ActionTypes.UPDATE_SVG_TRANSFORM,payload:{scale:newScale}});};const handleZoomIn=()=>{const newScale=Math.min(3,svgTransform.scale*1.2);dispatch({type:ActionTypes.UPDATE_SVG_TRANSFORM,payload:{scale:newScale}});};const handleZoomOut=()=>{const newScale=Math.max(0.1,svgTransform.scale*0.8);dispatch({type:ActionTypes.UPDATE_SVG_TRANSFORM,payload:{scale:newScale}});};const handleCenter=()=>{dispatch({type:ActionTypes.RESET_SVG_TRANSFORM});};// Add event listeners\nuseEffect(()=>{document.addEventListener('mousemove',handleMouseMove);document.addEventListener('mouseup',handleMouseUp);return()=>{document.removeEventListener('mousemove',handleMouseMove);document.removeEventListener('mouseup',handleMouseUp);};},[isDragging,dragStart]);const renderNode=function(node){let isActive=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const nodeState=isActive?'active':node.state;const fillColor=nodeColors[nodeState]||nodeColors.pending;return/*#__PURE__*/_jsxs(\"g\",{transform:\"translate(\".concat(node.x,\", \").concat(node.y,\")\"),className:\"tree-node\",children:[/*#__PURE__*/_jsx(\"circle\",{r:\"25\",fill:fillColor,stroke:\"#fff\",strokeWidth:\"2\",className:\"tree-node-circle\"}),/*#__PURE__*/_jsx(\"text\",{y:\"-5\",textAnchor:\"middle\",fill:\"white\",fontSize:\"10\",className:\"tree-node-text\",children:\"\".concat(node.name,\"(\").concat(node.args.join(','),\")\")}),/*#__PURE__*/_jsx(\"text\",{y:\"8\",textAnchor:\"middle\",fill:\"white\",fontSize:\"10\",className:\"tree-node-result\",children:node.result!==undefined?\"= \".concat(node.result):''})]},node.id);};const renderEdge=(parent,child)=>{return/*#__PURE__*/_jsx(\"line\",{x1:parent.x,y1:parent.y+25,x2:child.x,y2:child.y-25,stroke:\"#666\",strokeWidth:\"2\",className:\"tree-edge\"},\"\".concat(parent.id,\"-\").concat(child.id));};const renderTree=function(node){let activeNodeId=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;const elements=[];// Render edges first\nif(node.children){node.children.forEach(child=>{elements.push(renderEdge(node,child));elements.push(...renderTree(child,activeNodeId));});}// Render node\nelements.push(renderNode(node,node.id===activeNodeId));return elements;};const activeNodeId=(_executionSteps$curre=executionSteps[currentStep])===null||_executionSteps$curre===void 0?void 0:_executionSteps$curre.activeNode;return/*#__PURE__*/_jsxs(\"div\",{className:\"panel visualization-panel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"panel-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Tree Visualization\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"visualization-controls\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"btn btn--sm btn--outline\",onClick:handleZoomIn,title:\"Zoom In\",children:/*#__PURE__*/_jsx(ZoomIn,{size:16})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn--sm btn--outline\",onClick:handleZoomOut,title:\"Zoom Out\",children:/*#__PURE__*/_jsx(ZoomOut,{size:16})}),/*#__PURE__*/_jsx(\"button\",{className:\"btn btn--sm btn--outline\",onClick:handleCenter,title:\"Center & Reset Zoom\",children:/*#__PURE__*/_jsx(Maximize2,{size:16})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"panel-body\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tree-container\",children:[/*#__PURE__*/_jsxs(\"svg\",{ref:svgRef,className:\"tree-svg\",viewBox:\"0 0 800 600\",onMouseDown:handleMouseDown,onWheel:handleWheel,style:{cursor:isDragging?'grabbing':'grab'},children:[/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"marker\",{id:\"arrowhead\",markerWidth:\"10\",markerHeight:\"7\",refX:\"9\",refY:\"3.5\",orient:\"auto\",children:/*#__PURE__*/_jsx(\"polygon\",{points:\"0 0, 10 3.5, 0 7\",fill:\"#666\"})})}),/*#__PURE__*/_jsx(\"g\",{className:\"tree-group\",transform:\"translate(\".concat(svgTransform.x,\", \").concat(svgTransform.y,\") scale(\").concat(svgTransform.scale,\")\"),children:treeData&&renderTree(treeData,activeNodeId)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"tree-legend\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:nodeColors.active}}),/*#__PURE__*/_jsx(\"span\",{children:\"Active\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:nodeColors.completed}}),/*#__PURE__*/_jsx(\"span\",{children:\"Completed\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:nodeColors.baseCase}}),/*#__PURE__*/_jsx(\"span\",{children:\"Base Case\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{backgroundColor:nodeColors.pending}}),/*#__PURE__*/_jsx(\"span\",{children:\"Pending\"})]})]}),!treeData&&/*#__PURE__*/_jsx(\"div\",{className:\"empty-state\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Run an algorithm to see the recursion tree visualization\"})})]})})]});}export default VisualizationPanel;","map":{"version":3,"names":["React","useRef","useEffect","useState","useRecursion","ZoomIn","ZoomOut","Maximize2","jsx","_jsx","jsxs","_jsxs","VisualizationPanel","_executionSteps$curre","state","dispatch","ActionTypes","nodeColors","treeData","currentStep","executionSteps","svgTransform","svgRef","isDragging","setIsDragging","dragStart","setDragStart","x","y","handleMouseDown","e","target","current","closest","clientX","clientY","handleMouseMove","deltaX","deltaY","type","UPDATE_SVG_TRANSFORM","payload","handleMouseUp","handleWheel","preventDefault","delta","newScale","Math","max","min","scale","handleZoomIn","handleZoomOut","handleCenter","RESET_SVG_TRANSFORM","document","addEventListener","removeEventListener","renderNode","node","isActive","arguments","length","undefined","nodeState","fillColor","pending","transform","concat","className","children","r","fill","stroke","strokeWidth","textAnchor","fontSize","name","args","join","result","id","renderEdge","parent","child","x1","y1","x2","y2","renderTree","activeNodeId","elements","forEach","push","activeNode","onClick","title","size","ref","viewBox","onMouseDown","onWheel","style","cursor","markerWidth","markerHeight","refX","refY","orient","points","backgroundColor","active","completed","baseCase"],"sources":["D:/Projects/git/main_vercel/Recursion_visual/frontend1/src/components/VisualizationPanel.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport { useRecursion } from '../context/RecursionContext';\nimport { ZoomIn, ZoomOut, Maximize2 } from 'lucide-react';\n\nfunction VisualizationPanel() {\n  const { state, dispatch, ActionTypes, nodeColors } = useRecursion();\n  const { treeData, currentStep, executionSteps, svgTransform } = state;\n  const svgRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n\n  // Mouse event handlers for pan and zoom\n  const handleMouseDown = (e) => {\n    if (e.target === svgRef.current || e.target.closest('.tree-group')) {\n      setIsDragging(true);\n      setDragStart({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseMove = (e) => {\n    if (isDragging) {\n      const deltaX = e.clientX - dragStart.x;\n      const deltaY = e.clientY - dragStart.y;\n\n      dispatch({\n        type: ActionTypes.UPDATE_SVG_TRANSFORM,\n        payload: {\n          x: svgTransform.x + deltaX,\n          y: svgTransform.y + deltaY\n        }\n      });\n\n      setDragStart({ x: e.clientX, y: e.clientY });\n    }\n  };\n\n  const handleMouseUp = () => {\n    setIsDragging(false);\n  };\n\n  const handleWheel = (e) => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    const newScale = Math.max(0.1, Math.min(3, svgTransform.scale * delta));\n\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: { scale: newScale }\n    });\n  };\n\n  const handleZoomIn = () => {\n    const newScale = Math.min(3, svgTransform.scale * 1.2);\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: { scale: newScale }\n    });\n  };\n\n  const handleZoomOut = () => {\n    const newScale = Math.max(0.1, svgTransform.scale * 0.8);\n    dispatch({\n      type: ActionTypes.UPDATE_SVG_TRANSFORM,\n      payload: { scale: newScale }\n    });\n  };\n\n  const handleCenter = () => {\n    dispatch({ type: ActionTypes.RESET_SVG_TRANSFORM });\n  };\n\n  // Add event listeners\n  useEffect(() => {\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n    };\n  }, [isDragging, dragStart]);\n\n  const renderNode = (node, isActive = false) => {\n    const nodeState = isActive ? 'active' : node.state;\n    const fillColor = nodeColors[nodeState] || nodeColors.pending;\n\n    return (\n      <g key={node.id} transform={`translate(${node.x}, ${node.y})`} className=\"tree-node\">\n        <circle\n          r=\"25\"\n          fill={fillColor}\n          stroke=\"#fff\"\n          strokeWidth=\"2\"\n          className=\"tree-node-circle\"\n        />\n\n        <text\n          y=\"-5\"\n          textAnchor=\"middle\"\n          fill=\"white\"\n          fontSize=\"10\"\n          className=\"tree-node-text\"\n        >\n          {`${node.name}(${node.args.join(',')})`}\n        </text>\n\n        <text\n          y=\"8\"\n          textAnchor=\"middle\"\n          fill=\"white\"\n          fontSize=\"10\"\n          className=\"tree-node-result\"\n        >\n          {node.result !== undefined ? `= ${node.result}` : ''}\n        </text>\n      </g>\n    );\n  };\n\n  const renderEdge = (parent, child) => {\n    return (\n      <line\n        key={`${parent.id}-${child.id}`}\n        x1={parent.x}\n        y1={parent.y + 25}\n        x2={child.x}\n        y2={child.y - 25}\n        stroke=\"#666\"\n        strokeWidth=\"2\"\n        className=\"tree-edge\"\n      />\n    );\n  };\n\n  const renderTree = (node, activeNodeId = null) => {\n    const elements = [];\n\n    // Render edges first\n    if (node.children) {\n      node.children.forEach(child => {\n        elements.push(renderEdge(node, child));\n        elements.push(...renderTree(child, activeNodeId));\n      });\n    }\n\n    // Render node\n    elements.push(renderNode(node, node.id === activeNodeId));\n\n    return elements;\n  };\n\n  const activeNodeId = executionSteps[currentStep]?.activeNode;\n\n  return (\n    <div className=\"panel visualization-panel\">\n      <div className=\"panel-header\">\n        <h3>Tree Visualization</h3>\n        <div className=\"visualization-controls\">\n          <button\n            className=\"btn btn--sm btn--outline\"\n            onClick={handleZoomIn}\n            title=\"Zoom In\"\n          >\n            <ZoomIn size={16} />\n          </button>\n          <button\n            className=\"btn btn--sm btn--outline\"\n            onClick={handleZoomOut}\n            title=\"Zoom Out\"\n          >\n            <ZoomOut size={16} />\n          </button>\n          <button\n            className=\"btn btn--sm btn--outline\"\n            onClick={handleCenter}\n            title=\"Center & Reset Zoom\"\n          >\n            <Maximize2 size={16} />\n          </button>\n        </div>\n      </div>\n\n      <div className=\"panel-body\">\n        <div className=\"tree-container\">\n          <svg\n            ref={svgRef}\n            className=\"tree-svg\"\n            viewBox=\"0 0 800 600\"\n            onMouseDown={handleMouseDown}\n            onWheel={handleWheel}\n            style={{ cursor: isDragging ? 'grabbing' : 'grab' }}\n          >\n            <defs>\n              <marker\n                id=\"arrowhead\"\n                markerWidth=\"10\"\n                markerHeight=\"7\"\n                refX=\"9\"\n                refY=\"3.5\"\n                orient=\"auto\"\n              >\n                <polygon\n                  points=\"0 0, 10 3.5, 0 7\"\n                  fill=\"#666\"\n                />\n              </marker>\n            </defs>\n\n            <g\n              className=\"tree-group\"\n              transform={`translate(${svgTransform.x}, ${svgTransform.y}) scale(${svgTransform.scale})`}\n            >\n              {treeData && renderTree(treeData, activeNodeId)}\n            </g>\n          </svg>\n\n          {/* Legend */}\n          <div className=\"tree-legend\">\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.active }}></div>\n              <span>Active</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.completed }}></div>\n              <span>Completed</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.baseCase }}></div>\n              <span>Base Case</span>\n            </div>\n            <div className=\"legend-item\">\n              <div className=\"legend-color\" style={{ backgroundColor: nodeColors.pending }}></div>\n              <span>Pending</span>\n            </div>\n          </div>\n\n          {!treeData && (\n            <div className=\"empty-state\">\n              <p>Run an algorithm to see the recursion tree visualization</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VisualizationPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}